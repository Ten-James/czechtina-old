package czechtina.grammar

val AllComparation = listOf(
    GrammarToken.OPERATOR_EQUAL,
    GrammarToken.OPERATOR_NOT_EQUAL,
    GrammarToken.OPERATOR_LESS,
    GrammarToken.OPERATOR_LESS_OR_EQUAL,
    GrammarToken.OPERATOR_GREATER,
    GrammarToken.OPERATOR_GREATER_OR_EQUAL,
)

enum class GrammarToken {
    TYPE_VOID,
    TYPE_INTEGER,
    TYPE_DECIMAL,
    TYPE_BOOLEAN,
    TYPE_CHAR,
    TYPE_POINTER,
    TYPE_ADDRESS,
    TYPE_VALUE,
    TYPE_ARRAY,
    OPERATOR_PLUS,
    OPERATOR_MINUS,
    OPERATOR_MULTIPLY,
    OPERATOR_DIVIDE,
    OPERATOR_MODULO,
    OPERATOR_ASSIGN,
    OPERATOR_EQUAL,
    OPERATOR_NOT_EQUAL,
    OPERATOR_LESS,
    OPERATOR_LESS_OR_EQUAL,
    OPERATOR_GREATER,
    OPERATOR_GREATER_OR_EQUAL,
    OPERATOR_AND,
    OPERATOR_OR,
    OPERATOR_NOT,
    OPERATOR_ITERATE,
    KEYWORD_IF,
    KEYWORD_ELSE,
    KEYWORD_WHILE,
    KEYWORD_FOR,
    KEYWORD_FUNCTION_CALL,
    KEYWORD_RETURN,
    KEYWORD_BREAK,
    KEYWORD_CONTINUE,
    KEYWORD_VAR_DEFINITION,
    KEYWORD_IMPORT,
    KEYWORD_IMPORT_C,
    KEYWORD_RANGE_DEFINITION,
    KEYWORD_TYPE_DEFINITION,
    KEYWORD_AS,
    KEYWORD_STRUCT,
    VARIABLE,
}

val Alltypes = listOf(
    GrammarToken.TYPE_VOID,
    GrammarToken.TYPE_INTEGER,
    GrammarToken.TYPE_DECIMAL,
    GrammarToken.TYPE_BOOLEAN,
    GrammarToken.TYPE_CHAR,
)